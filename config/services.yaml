# # This file is the entry point to configure your own services.
# # Files in the packages/ subdirectory configure your dependencies.

# # Put parameters here that don't need to change on each machine where the app is deployed
# # https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
# parameters:



#     # makes classes in src/ available to be used as services
#     # this creates a service per class whose id is the fully-qualified class name
#     App\:
#         resource: '../src/'
#         exclude:
#             - '../src/DependencyInjection/'
#             - '../src/Entity/'
#             - '../src/Kernel.php'

#     # add more service definitions when explicit configuration is needed
#     # please note that last definitions always *replace* previous ones
parameters:
  uploads_directory: "%kernel.project_dir%/public/uploads" 
services:
  _defaults:
    autowire: true 
    autoconfigure: true 
    public: false
    
  App\:
    resource: "../src/*"
    exclude:
        - "../src/DependencyInjection/"
        - "../src/Entity/"
        - "../src/Kernel.php"
  App\EventListener\AuthenticationSuccessListener:
    arguments:
      $refreshTokenTtl: 2592000 
    tags:
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }
  #Service utilis√© pour l'extraction de token jwt d'une requete http depuis un COOKIE
  App\Security\Extractor\CookieTokenExtractor:
    arguments:
      $cookieName: 'BEARER' 
    tags:
      - { name: lexik_jwt_authentication.token_extractor, priority: 50 }
  App\Security\RefreshTokenAuthenticator: ~
  App\Security\CookieTokenAuthenticator:
    arguments:
      $tokenExtractor: "@lexik_jwt_authentication.extractor.chain_extractor"
      $jwtEncoder: "@lexik_jwt_authentication.encoder"
      $userProvider: "@security.user.provider.concrete.app_user_provider"

  App\EventSubscriber\JWTCreatedSubscriber: ~
  App\EventSubscriber\UserRegistrationSubscriber:
    tags: ['kernel.event_subscriber']
  App\EventListener\JwtCookieListener:
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse, priority: 10 }
    public: true

  App\EventListener\CsrfRequestListener:
    tags:
      - {
          name: kernel.event_listener,
          event: kernel.request,
          method: onKernelRequest,
          priority: 1000,
        }

  App\DataPersister\UserDataPersister: 
    arguments:
      $frontendUrl: '%env(FRONTEND_URL)%' 

  App\Repository\:
    resource: "../src/Repository"
    tags: ["doctrine.repository_service"]
  App\Controller\:
    resource: "../src/Controller"
    exclude: "../src/Controller/{Debugger,Tests,Test}"
    public: true 
  App\Service\:
    resource: "../src/Service/*"
    public: false
  
  App\Encoder\MultipartDecoder:
    arguments:
      $requestStack: "@request_stack"
    tags:
      - { name: "serializer.encoder", priority: 10 }
  App\Serializer\PhotoDenormalizer:
    tags:
      - { name: "serializer.denormalizer", priority: 100 }
  App\Serializer\PhotoNormalizer:
    arguments:
      - "@api_platform.jsonld.normalizer.item"
      - "@vich_uploader.storage"
    tags:
      - { name: "serializer.normalizer", priority: 100 }
  App\Repository\WalkRepository:
    tags: ["doctrine.repository_service"]
  App\EventListener\LogoutListener:
    tags:
        - { name: kernel.event_listener, event: Symfony\Component\Security\Http\Event\LogoutEvent, method: onLogout }
  App\Service\Contract\WalkCreationServiceInterface:
    alias: App\Service\WalkCreationService


  App\EventListener\ApiRateLimiterListener:
    arguments:
        $limiterFactory: '@limiter.global_limiter'
        $security: '@security.helper'
        $logger: '@logger'
    tags:
        - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 50 }

  App\Security\CustomAuthenticationFailureHandler:
    arguments:
        $jwtManager: '@lexik_jwt_authentication.jwt_manager'
        $logger: '@logger'
        $loginLimiter: '@limiter.login'
  App\EventListener\WalkUpdateListener:
      arguments:
          # $service1: 'App\Service\Service1' 
          # $service2: 'App\Service\Service2'
      tags:
          - { name: doctrine.orm.entity_listener }
